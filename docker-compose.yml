version: "3.8"
services:
  app:
    build:
      context: ./
      target: production
      dockerfile: ./docker-configurations/nodejs/Dockerfile
    volumes:
      - .:/src
    command: node app.js
    ports:
      - "3000"
    environment:
      NODE_ENV: production
      DEBUG: nodejs-docker-express:*
  queue_processor:
    build:
      context: ./
      target: production
      dockerfile: ./docker-configurations/nodejs/Dockerfile
    volumes:
      - .:/src
    command: node queueProcessor.js
    ports:
      - "3001"
    environment:
      NODE_ENV: production
      DEBUG: nodejs-docker-express:*
  redis_cache:
    image: redis

    restart: always
    environment:
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL,CONFIG
  redis_queue:
    image: redis

    restart: always
    environment:
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL,CONFIG
  nginx:
    container_name: load_balancer
    image: nginx:latest
    ports:
      - "80:80"
    restart: always
    volumes:
      - ./docker-configurations/nginx/shortener.test.conf:/etc/nginx/conf.d/default.conf
  pg-db:
    image: postgres:12.12
    container_name: pg_db
    ports:
      - "5435:5432"
    restart: always
    environment:
      POSTGRES_DB: url_shortener
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: root
    volumes:
      - pgdata:/var/lib/postgresql/data
volumes:
  pgdata:
